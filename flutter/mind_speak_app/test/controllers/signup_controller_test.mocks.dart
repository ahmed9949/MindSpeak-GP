// Mocks generated by Mockito 5.4.6 from annotations
// in mind_speak_app/test/controllers/signup_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i8;

import 'package:cloud_firestore/cloud_firestore.dart' as _i4;
import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i5;
import 'package:mind_speak_app/models/Child.dart' as _i10;
import 'package:mind_speak_app/models/ParentModel.dart' as _i12;
import 'package:mind_speak_app/models/Therapist.dart' as _i11;
import 'package:mind_speak_app/models/User.dart' as _i9;
import 'package:mind_speak_app/Repositories/SignupRepository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SignupRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignupRepository extends _i1.Mock implements _i3.SignupRepository {
  MockSignupRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set auth(_i2.FirebaseAuth? value) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set firestore(_i4.FirebaseFirestore? value) => super.noSuchMethod(
        Invocation.setter(
          #firestore,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set storage(_i5.FirebaseStorage? value) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String generateChildId() => (super.noSuchMethod(
        Invocation.method(
          #generateChildId,
          [],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #generateChildId,
            [],
          ),
        ),
      ) as String);

  @override
  _i7.Future<String> uploadImage(
    _i8.File? image,
    String? folderName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadImage,
          [
            image,
            folderName,
          ],
        ),
        returnValue: _i7.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #uploadImage,
            [
              image,
              folderName,
            ],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  String hashPassword(String? password) => (super.noSuchMethod(
        Invocation.method(
          #hashPassword,
          [password],
        ),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.method(
            #hashPassword,
            [password],
          ),
        ),
      ) as String);

  @override
  _i7.Future<bool> isValueTaken(
    String? collection,
    String? field,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isValueTaken,
          [
            collection,
            field,
            value,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> isParentPhoneNumberTaken(int? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #isParentPhoneNumberTaken,
          [phoneNumber],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> isTherapistPhoneNumberTaken(int? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #isTherapistPhoneNumberTaken,
          [phoneNumber],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> isNationalIdTaken(String? nationalId) => (super.noSuchMethod(
        Invocation.method(
          #isNationalIdTaken,
          [nationalId],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i2.UserCredential> createFirebaseUser(_i9.UserModel? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #createFirebaseUser,
          [user],
        ),
        returnValue: _i7.Future<_i2.UserCredential>.value(_FakeUserCredential_0(
          this,
          Invocation.method(
            #createFirebaseUser,
            [user],
          ),
        )),
      ) as _i7.Future<_i2.UserCredential>);

  @override
  _i7.Future<void> saveUserDetails(_i9.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUserDetails,
          [user],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveSpecificDetails(
    String? collection,
    Map<String, dynamic>? data,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSpecificDetails,
          [
            collection,
            data,
            id,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveParentAndChildDetails(_i10.ChildModel? child) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveParentAndChildDetails,
          [child],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveTherapistDetails(_i11.TherapistModel? therapist) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTherapistDetails,
          [therapist],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveParentDetails(_i12.ParentModel? parent) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveParentDetails,
          [parent],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateBiometricStatus(
    String? userId,
    bool? enabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBiometricStatus,
          [
            userId,
            enabled,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
